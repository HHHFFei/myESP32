// https://blog.csdn.net/qq_38842418/article/details/128183660 
/******************头文件定义************************/
#include <FastLED.h> //加载灯带头文件
#include <Arduino.h>
/******************头文件定义************************/

/******************宏定义***********************/
#define NUM_LEDS 16*16 // 灯珠数量
#define LED_TYPE WS2812 // 灯带型号
#define COLOR_ORDER GRB // 输入颜色的顺序 根据手册决定
CRGB leds[NUM_LEDS]; // 构建灯珠对象
#define ARRAY_SIZE(A) (sizeof(A) / sizeof((A)[0])) // 求数组长度 总长度/单个长度
/******************宏定义***********************/

int imgdata[256*3] = {0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
0, 0, 0, 
255, 255, 255};

/****************外部电路引脚定义**********************/
#define DATA_PIN 13 // 灯带引脚定义
/****************外部电路引脚定义**********************/

/*********************变量数组等定义************************/
CHSV myHSV(80, 255, 100); // 定义色板 色调，饱和度，亮度
uint8_t gCurrentPatternNumber = 0; // 函数数组下标
uint8_t gHue = 0; // 颜色转换标志位CHSV myHSV(0,255,200);//色调，饱和度，亮度 All_colors所用
uint8_t max_bright = 200; // 亮度
/*********************变量数组等定义************************/

/*****************函数数组定义*********************/
void lightTest(void);
//SimplePatternList gPatterns = {All_colors, Run_light, rainbow_run, confetti, juggle};
// 循环遍历的模式列表。每个模式定义为下面的一个单独的函数。
/*****************函数数组定义*********************/
void lightTest()
{
  uint8_t i; // 自加变量

  for (i = 0; i < NUM_LEDS; i++) 
  {
    // leds[i] = CRGB();
    leds[i] = CRGB(imgdata[i*3],imgdata[i*3+1],imgdata[i*3+2]);
    delay(30); // 速度调节
    FastLED.show(); // show LED
  }
  delay(30*1000);


  // for (i = 0; i < NUM_LEDS - 3; i++) // i<总灯带数-3 为了快速反弹-3 开启循环
  // {
  //   // leds[i] = CHSV(i * 2, 255, 192); // 第i个灯 CHSV（1.亮的颜色 2.饱和度 3.亮度）
  //   leds[i] = CRGB(255,255,255);
  //   delay(30); // 速度调节
  //   FastLED.show(); // show LED
  //   fadeToBlackBy(leds, NUM_LEDS, 80); // 以80速度逐渐熄灭
  // }

  // for (i = NUM_LEDS - 2; i > 0; i--) // 往返效果
  // {
  //   leds[i] = CHSV(i * 2, 255, 192); // 第i个灯 CHSV（1.亮的颜色 2.饱和度 3.亮度）
  //   delay(30); // 速度调节
  //   FastLED.show(); // show LED
  //   fadeToBlackBy(leds, NUM_LEDS, 80); // 以80速度逐渐熄灭
  // }
}

/*把WS2812Init放入setup函数*/

void WS2812Init(void)
{
  delay(1000); // 上电延迟
  FastLED.addLeds<LED_TYPE, DATA_PIN, COLOR_ORDER>(leds, NUM_LEDS).setCorrection(TypicalLEDStrip);
  // 初始化灯带模板 无需变动复制粘贴即可
  FastLED.setBrightness(max_bright); // 初始化亮度
}

/*把WS2812Run放入loop函数*/

void WS2812Run(void)
{
  lightTest();
}

/********************主函数************************/

void setup()
{
  WS2812Init();
}

void loop()
{
  WS2812Run();
}
